{"version":3,"sources":["redux/actions.js","redux/actionTypes.js","constants.js","components/Feedback.js","components/searchBookItem.js","components/search.js","components/listBookItem.js","components/lists.js","views/App.js","redux/reducers/index.js","redux/reducers/searches.js","redux/reducers/lists.js","redux/reducers/userFeedback.js","index.js"],"names":["getMyBookLists","dispatch","Axios","get","then","response","receiveMyBookLists","data","error","handleGetError","receiveSearchList","searchListInfo","type","payload","myBooks","myBookLists","handleSuccess","handleTwiceAddError","handleUpdateError","handleDeleteError","handleAPIError","handleDisplaySearched","searchInitialState","queryResult","listsInitialState","toRead","haveRead","UI_FLAG_GET_FAIL","feedbackInitialState","flag","message","Feedback","props","state","modalOpen","toggle","bind","this","setState","uiErrorReset","Modal","isOpen","checkError","ModalBody","setMessage","ModalFooter","Button","onClick","Component","connect","userFeedback","SearchBookItem","addAndDelete","markType","add","book","delete","Container","CardText","authors","outline","color","className","size","newMarkType","post","title","id","addToMyBookLists","bookInfo","deleteSearchBook","Search","search","onFieldChange","event","target","value","Form","inline","InputGroup","Input","onChange","searchBooks","Row","Col","Card","CardHeader","CardBody","renderSearchList","searchList","length","map","key","CardTitle","query","apiQuery","replace","bookHelper","items","volumeInfo","ListBookItem","update","markTypeTitle","put","updateMyBookLists","deleteFromMyLists","Lists","onMount","toReadList","haveReadList","bookLists","App","showLists","toggleView","combineReducers","action","Object","assign","filter","store","createStore","indexReducer","applyMiddleware","thunkMiddleware","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+WA2BO,SAASA,IACZ,OAAO,SAAUC,GACb,OAAOC,IAAMC,IAAI,eACZC,MAAK,SAAAC,GAAQ,OAAIJ,EAASK,EAAmBD,EAASE,UACnD,SAAAC,GAAK,OAAIP,EAASQ,EAAeD,QA4C1C,IAAME,EAAoB,SAACC,GAAD,MAAqB,CAClDC,KC5EkC,yBD6ElCC,QAASF,IASAL,EAAqB,SAACQ,GAAD,MAAc,CAC5CF,KCtF4B,mBDuF5BG,YAAaD,IAIJE,EAAgB,iBAAO,CAChCJ,KCvF0B,mBD8FjBK,EAAsB,iBAAO,CACtCL,KC3FkC,2BD8FzBM,EAAoB,iBAAO,CACpCN,KC9F+B,wBDiGtBO,EAAoB,iBAAO,CACpCP,KCjG+B,wBDoGtBH,EAAiB,iBAAO,CACjCG,KCxG4B,2BD2GnBQ,EAAiB,iBAAO,CACjCR,KCxG4B,qBD2GnBS,EAAwB,iBAAO,CACxCT,KC3GuC,gCCdpC,IAAMU,EAAqB,CAAEC,YAAa,IAEpCC,EAAoB,CAC7BC,OAAQ,GACRC,SAAU,IAUDC,EAAmB,mCAOnBC,EAAuB,CAAEC,KATP,kBAS8BC,QAAS,ICZhEC,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,WAAW,EACXJ,QAAS,IAEb,EAAKK,OAAS,EAAKA,OAAOC,KAAZ,gBANC,E,sEAUfC,KAAKC,SAAS,CAAEJ,WAAYG,KAAKJ,MAAMC,YACvCG,KAAKL,MAAMO,iB,mCAIX,OAAQF,KAAKL,MAAMH,MACf,IDRqB,oBCSjB,MAAO,iCACT,IDTuB,wBCUrB,MAAO,mCACT,KAAMF,EACJ,MAAO,gCACT,IDjBsB,uBCkBpB,MAAO,2CACT,IDlBsB,uBCmBpB,MAAO,wBACT,IDnBwB,+BCoBtB,MAAO,6CAEX,QACI,MAAO,M,mCAMf,MDnCwB,qBCmCpBU,KAAKL,MAAMH,MDlCQ,oBCkCqBQ,KAAKL,MAAMH,O,+BAQvD,OACI,kBAACW,EAAA,EAAD,CAAOC,OAAQJ,KAAKK,aAAcP,OAAQE,KAAKF,QAC3C,kBAACQ,EAAA,EAAD,KACI,4BAAKN,KAAKO,eAEd,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAASV,KAAKF,QAAtB,c,GAnDGa,aAgERC,eANO,SAAUhB,EAAOD,GACnC,MAAO,CACHH,KAAMI,EAAMiB,aAAarB,QAIO,CAAEU,aHuBd,iBAAO,CAC/B3B,KC1FuB,iBEkEZqC,CAA2ClB,G,wECnEpDoB,E,2MAmBJC,aAAe,SAACC,GACd,EAAKrB,MAAMsB,IAAI,EAAKtB,MAAMuB,KAAMF,GAChC,EAAKrB,MAAMwB,OAAO,EAAKxB,MAAMuB,O,wEAnBrB,IAAD,OACP,OACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAWrB,KAAKL,MAAMuB,KAAKI,SAE3B,kBAACb,EAAA,EAAD,CAAQc,SAAO,EAACC,MAAM,UAAUC,UAAU,OAAOC,KAAK,KACtDhB,QAAU,kBAAM,EAAKK,aAAa,YFPP,oBEW3B,kBAACN,EAAA,EAAD,CAAQc,SAAO,EAACC,MAAM,UAAUC,UAAU,OAAOC,KAAK,KACtDhB,QAAU,kBAAM,EAAKK,aAAa,cFXL,qB,GEFRJ,aAqCdC,eALO,SAAUhB,EAAOD,GACrC,MAAO,MARgB,SAA4B/B,EAAU+B,GAC7D,MAAO,CACLsB,IAAK,SAACC,EAAMF,GAAP,OAAoBpD,EJEtB,SAA0BsD,EAAMS,GACnC,OAAO,SAAU/D,GACb,OAAOC,IAAM+D,KAAK,cAAe,CAC7BC,MAAOX,EAAKW,MACZP,QAASJ,EAAKI,QACdQ,GAAIZ,EAAKY,GACTd,SAAUW,IACX5D,MAAK,SAAAC,GAAQ,OAAIJ,EAASe,EAAcX,OACvC,SAAAG,GAAK,OAAIP,EAASgB,EAAoBT,QIVZ4D,CAAiBb,EAAMF,KACzDG,OAAQ,SAACD,GAAD,OAAUtD,EJ8CU,SAACsD,GAAD,MAAW,CACvC3C,KC7E8B,qBD8E9ByD,SAAUd,GIhDiBe,CAAiBf,QASjCN,CAA6CE,GCrCtDoB,E,YAEJ,WAAYvC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXuC,OAAQ,IAGV,EAAKC,cAAgB,EAAKA,cAAcrC,KAAnB,gBAPJ,E,2EAULsC,GACZrC,KAAKC,SAAL,eAAiBoC,EAAMC,OAAOR,GAAKO,EAAMC,OAAOC,U,+BAGxC,IAAD,OACP,OACE,6BAEE,kBAACC,EAAA,EAAD,CAAMC,QAAM,GACV,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOpE,KAAK,OAAOuD,GAAG,SAASS,MAAOvC,KAAKJ,MAAMuC,OAAQS,SAAU5C,KAAKoC,gBACxE,kBAAC3B,EAAA,EAAD,CAAQgB,UAAU,mBAAmBf,QAAS,kBAAM,EAAKf,MAAMkD,YAAY,EAAKjD,MAAMuC,UAAtF,YAIJ,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gBACA,kBAACC,EAAA,EAAD,KACGlD,KAAKmD,0B,yCAUlB,OAAInD,KAAKL,MAAMyD,YAAcpD,KAAKL,MAAMyD,WAAWC,OAAS,EACzCrD,KAAKL,MAAMyD,WAAWE,KAAI,SAACpC,GAAD,OACzC,yBAAKqC,IAAKrC,EAAKY,IACb,kBAAC0B,EAAA,EAAD,KAAYtC,EAAKW,OACjB,kBAAC,EAAD,CAAgBX,KAAMA,QAIrB,S,GAlDUP,aAkENC,mBAZO,SAAUhB,EAAOD,GACrC,MAAO,CACLyD,WAAYxD,EAAMuC,OAAOjD,gBAI7B,SAA4BtB,EAAU+B,GACpC,MAAO,CACLkD,YAAa,SAAClD,GAAD,OAAW/B,EL9DrB,SAAgB6F,GACnB,IAAMC,EAsHV,SAAoBD,GAChB,OAAOA,EAAME,QAAQ,KAAM,KAvHVC,CAAWH,GAC5B,OAAO,SAAU7F,GAEb,OAAOC,IAAMC,IAAI,iDAAmD4F,EAAW,gDAC1E3F,MAAK,SAAAC,GACF,OAAOA,EAASE,KAAK2F,MAAMP,KAAI,SAACpC,GAC5B,MACI,CACIW,MAAOX,EAAK4C,WAAWjC,MACvBP,QAASJ,EAAK4C,WAAWxC,QACzBQ,GAAIZ,EAAKY,UAGtB,SAAA3D,GAAK,OAAIP,EAASmB,EAAeZ,OAElCJ,MAAK,SAAAC,GAAQ,OAAIJ,EAASS,EAAkBL,OAC1C,SAAAG,GAAK,OAAIP,EAASoB,EAAsBb,QK6CnBgE,CAAOxC,QAI7BiB,CAA6CsB,GClEtD6B,E,iLACM,IAAD,OACP,OACE,kBAAC3C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAWrB,KAAKL,MAAMuB,KAAKI,SAE3B,kBAACb,EAAA,EAAD,CAAQc,SAAO,EAACC,MAAM,UAAUC,UAAU,OAAOC,KAAK,KACpDhB,QAAS,WAAQ,EAAKf,MAAMqE,OAAO,EAAKrE,MAAMuB,KAAM,EAAKvB,MAAMqB,YAC9DhB,KAAKL,MAAMsE,cAFd,KAKA,kBAACxD,EAAA,EAAD,CAAQc,SAAO,EAACC,MAAM,SAASC,UAAU,OAAOC,KAAK,KAAKhB,QAAS,WAAQ,EAAKf,MAAMwB,OAAO,EAAKxB,MAAMuB,KAAM,EAAKvB,MAAMqB,YAAzH,e,GAXmBL,aA+BZC,gBALO,SAAUhB,EAAOD,GACrC,MAAO,MATgB,SAA4B/B,EAAU+B,GAC7D,MAAO,CAELqE,OAAQ,SAAC9C,EAAMS,GAAP,OAAuB/D,ENqB5B,SAA2BsD,EAAMS,GACpC,OAAO,SAAU/D,GACb,OAAOC,IAAMqG,IAAI,cAAgBhD,EAAKY,GAAI,CACtCD,MAAOX,EAAKW,MACZP,QAASJ,EAAKI,QACdQ,GAAIZ,EAAKY,GACTd,SAAUW,IACX5D,MAAK,SAAAC,GAAQ,OAAIJ,EAASe,EAAcX,OACvC,SAAAG,GAAK,OAAIP,EAASiB,EAAkBV,OACtCJ,KAAKH,EAASD,OM9BoBwG,CAAkBjD,EAAMS,KAChER,OAAQ,SAACD,EAAMF,GAAP,OAAoBpD,ENiCzB,SAA2BsD,EAAMF,GACpC,OAAO,SAAUpD,GACb,OAAOC,IAAMsD,OAAO,cAAgBD,EAAKY,GAAI,CACzCD,MAAOX,EAAKW,MACZP,QAASJ,EAAKI,QACdQ,GAAIZ,EAAKY,GACTd,SAAUA,IACXjD,MAAK,SAAAC,GAAQ,OAAIJ,EAASe,EAAcX,OACvC,SAAAG,GAAK,OAAIP,EAASkB,EAAkBX,OACtCJ,KAAKH,EAASD,OM1CiByG,CAAkBlD,EAAMF,QASlDJ,CAA6CmD,GC7BtDM,G,4LAGFrE,KAAKL,MAAM2E,Y,+BAIX,OACE,6BAEE,kBAAClD,EAAA,EAAD,KACE,kBAAC0B,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBAEA,kBAACC,EAAA,EAAD,KACKlD,KAAKL,MAAM4E,WAAWjB,KAAI,SAACpC,GAAD,OACzB,yBAAKqC,IAAKrC,EAAKY,IACb,kBAAC0B,EAAA,EAAD,KAAYtC,EAAKW,OACb,kBAAC,GAAD,CAAUJ,UAAU,OAAOP,KAAMA,EAAM+C,cLnB5B,eKmBkEjD,SAAS,mBAOpG,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uBAEA,kBAACC,EAAA,EAAD,KACGlD,KAAKL,MAAM6E,aAAalB,KAAI,SAACpC,GAAD,OAC3B,yBAAKqC,IAAKrC,EAAKY,IACb,kBAAC0B,EAAA,EAAD,KAAYtC,EAAKW,OACb,kBAAC,GAAD,CAAUX,KAAMA,EAAM+C,cLlCX,mBKkC+CjD,SAAS,wB,GAjCvEL,aA0DLC,oBAbO,SAAyBhB,EAAOD,GACpD,MAAO,CACL4E,WAAY3E,EAAM6E,UAAUrF,OAC5BoF,aAAc5E,EAAM6E,UAAUpF,aAIlC,SAA4BzB,EAAU+B,GACpC,MAAO,CACH2E,QAAS,WAAQ1G,EAASD,SAIjBiD,CAA6CyD,ICzB7CK,G,YAjCb,WAAY/E,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX+E,WAAW,GAEb,EAAKC,WAAa,EAAKA,WAAW7E,KAAhB,gBALD,E,0EAUjBC,KAAKC,SAAS,CAAE0E,WAAY3E,KAAKJ,MAAM+E,c,+BAMvC,OACE,kBAACvD,EAAA,EAAD,CAAWK,UAAU,aACnB,kBAAC,EAAD,MACA,kBAACqB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKtB,UAAU,wBACXzB,KAAKJ,MAAM+E,UACT,kBAAClE,EAAA,EAAD,CAAQgB,UAAU,cAAcf,QAASV,KAAK4E,YAA9C,kBADqB,kBAACnE,EAAA,EAAD,CAAQgB,UAAU,cAAcf,QAASV,KAAK4E,YAA9C,aAG3B,kBAAC7B,EAAA,EAAD,CAAKtB,UAAU,oCACXzB,KAAKJ,MAAM+E,UAAyB,kBAAC,GAAD,MAAb,kBAAC,EAAD,a,GA1BnBhE,a,SCFHkE,mBAAgB,CAC3B1C,OCHW,WAAuD,IAArCvC,EAAoC,uDAA5BX,EAAoB6F,EAAQ,uCACjE,OAAQA,EAAOvG,MACX,ITL8B,yBSM1B,OAAO,gBAAKqB,EAAZ,CAAmBV,YAAa4F,EAAOtG,UAE3C,ITJ0B,qBSKtB,OAAOuG,OAAOC,OAAO,GAAIpF,EAAO,CAC5BV,YAAaU,EAAMV,YAAY+F,QAAO,SAAC/D,GAAD,OAAUA,EAAKY,KAAOgD,EAAO9C,SAASF,QAGpF,QACI,OAAOlC,IDPf6E,UEHW,WAAkD,IAApC7E,EAAmC,uDAA3BT,EAAmB2F,EAAQ,uCAC5D,OAAQA,EAAOvG,MACX,IVLwB,mBUMpB,OAAOwG,OAAOC,OAAO,GAAIpF,EAAO,CAC5BR,OAAQ0F,EAAOpG,YAAYU,OAC3BC,SAAUyF,EAAOpG,YAAYW,WAGrC,QACI,OAAOO,IFLfiB,aGCW,WAA2D,IAAvCjB,EAAsC,uDAA9BL,EAAsBuF,EAAQ,uCACrE,OAAQA,EAAOvG,MACX,IXLsB,iBWMlB,MAAO,CAAEiB,KVAU,mBUCrB,IXAsB,mBWCpB,MAAO,CAAEA,KVIY,qBUHvB,IXDiC,8BWE/B,MAAO,CAAEA,KVGgB,yBUF3B,IXRsB,yBWSpB,MAAO,CAAEA,KAAMF,GACjB,IXRyB,sBWSvB,MAAO,CAAEE,KVLe,wBUM1B,IXX4B,yBWY1B,MAAO,CAAEA,KVLiB,gCUM5B,IXXyB,sBWYvB,MAAO,CAAEA,KVRe,wBUS1B,IXlBiB,cWmBf,MAAO,CAAEA,KVfW,oBUgBtB,QACE,OAAOI,M,SClBbsF,GAAQC,YAAYC,GAAcC,YAAgBC,OAGlDC,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OACL,kBAAC,IAAD,CAAUT,MAAOA,IACb,kBAAC,GAAD,OAEJK,M","file":"static/js/main.564a417a.chunk.js","sourcesContent":["import {\r\n    RECEIVE_SEARCHED_BOOKS, RECEIVE_MY_BOOKS, RESET_ERROR, HANDLE_SUCCESS, HANDLE_DELETE_ERROR, HANDLE_UPDATE_ERROR,\r\n    HANDLE_ADD_TWICE_ERROR, DELETE_SEARCH_BOOK, HANDLE_GET_ERROR, HANDLE_SEARCH_DISPLAY_ERROR, HANDLE_API_ERROR\r\n} from './actionTypes';\r\nimport Axios from 'axios';\r\n\r\nexport function search(query) {\r\n    const apiQuery = bookHelper(query)\r\n    return function (dispatch) {\r\n        // Retrieve Books from the Google Books API\r\n        return Axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + apiQuery + \"&key=\" + process.env.REACT_APP_GOOGLE_BOOKS_API_KEY)\r\n            .then(response => {\r\n                return response.data.items.map((book) => {\r\n                    return (\r\n                        {\r\n                            title: book.volumeInfo.title,\r\n                            authors: book.volumeInfo.authors,\r\n                            id: book.id\r\n                        })\r\n                })\r\n            }, error => dispatch(handleAPIError(error))\r\n                // Update store with the searched book results\r\n            ).then(response => dispatch(receiveSearchList(response)),\r\n                error => dispatch(handleDisplaySearched(error)))\r\n    }\r\n}\r\n\r\nexport function getMyBookLists() {\r\n    return function (dispatch) {\r\n        return Axios.get('/api/books/')\r\n            .then(response => dispatch(receiveMyBookLists(response.data)),\r\n                error => dispatch(handleGetError(error)))\r\n    }\r\n}\r\n\r\nexport function addToMyBookLists(book, newMarkType) {\r\n    return function (dispatch) {\r\n        return Axios.post('/api/books/', {\r\n            title: book.title,\r\n            authors: book.authors,\r\n            id: book.id,\r\n            markType: newMarkType\r\n        }).then(response => dispatch(handleSuccess(response)),\r\n            error => dispatch(handleTwiceAddError(error)))\r\n    }\r\n}\r\n\r\n// TODO: Figure out how to handle \"response\"\r\nexport function updateMyBookLists(book, newMarkType) {\r\n    return function (dispatch) {\r\n        return Axios.put('/api/books/' + book.id, {\r\n            title: book.title,\r\n            authors: book.authors,\r\n            id: book.id,\r\n            markType: newMarkType\r\n        }).then(response => dispatch(handleSuccess(response)),\r\n            error => dispatch(handleUpdateError(error))\r\n        ).then(dispatch(getMyBookLists()));\r\n    }\r\n}\r\n\r\nexport function deleteFromMyLists(book, markType) {\r\n    return function (dispatch) {\r\n        return Axios.delete('/api/books/' + book.id, {\r\n            title: book.title,\r\n            authors: book.authors,\r\n            id: book.id,\r\n            markType: markType\r\n        }).then(response => dispatch(handleSuccess(response)),\r\n            error => dispatch(handleDeleteError(error))\r\n        ).then(dispatch(getMyBookLists()));\r\n    }\r\n}\r\n\r\n// Manipulate Search Results Lists\r\nexport const receiveSearchList = (searchListInfo) => ({\r\n    type: RECEIVE_SEARCHED_BOOKS,\r\n    payload: searchListInfo // [Books]\r\n})\r\n\r\nexport const deleteSearchBook = (book) => ({\r\n    type: DELETE_SEARCH_BOOK,\r\n    bookInfo: book\r\n})\r\n\r\n// Get MyLists to components via Redux store\r\nexport const receiveMyBookLists = (myBooks) => ({\r\n    type: RECEIVE_MY_BOOKS,\r\n    myBookLists: myBooks // [toRead], [haveRead]\r\n})\r\n\r\n// Handle success and errors\r\nexport const handleSuccess = () => ({\r\n    type: HANDLE_SUCCESS\r\n})\r\n\r\nexport const uiErrorReset = () => ({\r\n    type: RESET_ERROR\r\n})\r\n\r\nexport const handleTwiceAddError = () => ({\r\n    type: HANDLE_ADD_TWICE_ERROR\r\n})\r\n\r\nexport const handleUpdateError = () => ({\r\n    type: HANDLE_UPDATE_ERROR\r\n})\r\n\r\nexport const handleDeleteError = () => ({\r\n    type: HANDLE_DELETE_ERROR\r\n})\r\n\r\nexport const handleGetError = () => ({\r\n    type: HANDLE_GET_ERROR\r\n})\r\n\r\nexport const handleAPIError = () => ({\r\n    type: HANDLE_API_ERROR\r\n})\r\n\r\nexport const handleDisplaySearched = () => ({\r\n    type: HANDLE_SEARCH_DISPLAY_ERROR\r\n})\r\n\r\n// Helpers\r\nfunction bookHelper(query) {\r\n    return query.replace(/ /g, \"+\")\r\n}","export const RECEIVE_SEARCHED_BOOKS = \"RECEIVE SEARCH RESULTS\";\r\nexport const RECEIVE_MY_BOOKS = \"RECEIVE MY BOOKS\";\r\nexport const ADD_TO_MY_LIST = \"ADD SEARCH BOOK TO ONE OF MY LISTS\";\r\nexport const UPDATE_MY_LIST = \"UPDATE TO READ AND HAVE READ LISTS\"\r\nexport const DELETE_SEARCH_BOOK = \"DELETE SEARCH BOOK\";\r\n\r\nexport const HANDLE_SUCCESS = \"HANDLE SUCCESS\";\r\nexport const RESET_ERROR = \"RESET ERROR\";\r\n\r\nexport const HANDLE_GET_ERROR = \"HANDLE GET LISTS ERROR\";\r\nexport const HANDLE_ADD_TWICE_ERROR = \"HANDLE ADD TWICE ERROR\";\r\nexport const HANDLE_UPDATE_ERROR = \"HANDLE UPDATE ERROR\";\r\nexport const HANDLE_DELETE_ERROR = \"HANDLE DELETE ERROR\";\r\nexport const HANDLE_API_ERROR = \"HANDLE API ERROR\";\r\nexport const HANDLE_SEARCH_DISPLAY_ERROR = \"HANDLE SEARCH DISPLAY ERROR\";\r\n","export const searchInitialState = { queryResult: [] };\r\n\r\nexport const listsInitialState = {\r\n    toRead: [],\r\n    haveRead: []\r\n}\r\n\r\nexport const MARK_TO_READ_BUTTON = \"Mark As Not Read\"\r\nexport const MARK_HAVE_READ_BUTTON = \"Mark As Read\"\r\n\r\n//UI feedback constants\r\nexport const UI_FLAG_RESOLVED = \"UI FLAG RESOLVED\";\r\nexport const UI_FLAG_SUCCESS = \"UI FLAG SUCCESS\";\r\n\r\nexport const UI_FLAG_GET_FAIL = \"UI FLAG FAILED TO RETRIEVE LISTS\";\r\nexport const UI_FLAG_UPDATE_ERROR = \"UI FLAG UPDATE ERROR\";\r\nexport const UI_FLAG_DELETE_ERROR = \"UI FLAG DELETE ERROR\";\r\nexport const UI_FLAG_ADD_BOOK_TWICE = \"UI FLAG ADD BOOK TWICE ERROR\";\r\nexport const UI_FLAG_API_ERROR = \"UI FLAG API ERROR\";\r\nexport const UI_FLAG_DISPLAY_ERROR = \"UI FLAG DISPLAY ERROR\";\r\n\r\nexport const feedbackInitialState = { flag: UI_FLAG_SUCCESS, message: \"\" };\r\n","import React, { Component } from 'react';\r\nimport { Modal, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { uiErrorReset } from '../redux/actions';\r\nimport {\r\n    UI_FLAG_RESOLVED, UI_FLAG_SUCCESS, UI_FLAG_GET_FAIL, UI_FLAG_DISPLAY_ERROR,\r\n    UI_FLAG_API_ERROR, UI_FLAG_UPDATE_ERROR, UI_FLAG_DELETE_ERROR, UI_FLAG_ADD_BOOK_TWICE\r\n} from '../constants';\r\n\r\nclass Feedback extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false,\r\n            message: \"\"\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ modalOpen: !this.state.modalOpen })\r\n        this.props.uiErrorReset();\r\n    }\r\n\r\n    setMessage() {\r\n        switch (this.props.flag) {\r\n            case (UI_FLAG_API_ERROR): {\r\n                return \"Could not fetch search results\";\r\n            } case (UI_FLAG_DISPLAY_ERROR): {\r\n                return \"Could not display search results\";\r\n            } case (UI_FLAG_GET_FAIL): {\r\n                return \"Could not retrieve your lists\";\r\n            } case (UI_FLAG_UPDATE_ERROR): {\r\n                return \"Could not update the book list placement\";\r\n            } case (UI_FLAG_DELETE_ERROR): {\r\n                return \"Could not delete book\";\r\n            } case (UI_FLAG_ADD_BOOK_TWICE): {\r\n                return \"Error: You can not add the same book twice\";\r\n            }\r\n            default: {\r\n                return \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    checkError() {\r\n        if (this.props.flag !== UI_FLAG_RESOLVED && this.props.flag !== UI_FLAG_SUCCESS) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.checkError()} toggle={this.toggle}>\r\n                <ModalBody >\r\n                    <h5>{this.setMessage()}</h5>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button onClick={this.toggle}>Exit</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = function (state, props) {\r\n    return {\r\n        flag: state.userFeedback.flag\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { uiErrorReset })(Feedback);","import React, { Component } from 'react';\r\nimport { CardText,Button, Container } from 'reactstrap';\r\nimport{ connect } from 'react-redux';\r\nimport { addToMyBookLists, deleteSearchBook } from '../redux/actions';\r\nimport { MARK_TO_READ_BUTTON, MARK_HAVE_READ_BUTTON } from '../constants';\r\n \r\nclass SearchBookItem extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Container>\r\n        <CardText>{this.props.book.authors}</CardText>\r\n        {/* Mark as To Read Button */}\r\n        <Button outline color=\"primary\" className=\"mb-3\" size=\"sm\"\r\n        onClick={ () => this.addAndDelete(\"toRead\") }>\r\n        { MARK_TO_READ_BUTTON }</Button>\r\n\r\n        {/* Mark As Have Read Button */}\r\n        <Button outline color=\"primary\" className=\"mb-3\" size=\"sm\" \r\n        onClick={ () => this.addAndDelete(\"haveRead\") }>\r\n        { MARK_HAVE_READ_BUTTON }</Button>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  addAndDelete = (markType) => {\r\n    this.props.add(this.props.book, markType)\r\n    this.props.delete(this.props.book)\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\r\n  return { \r\n    add: (book, markType) => dispatch(addToMyBookLists(book, markType)), \r\n    delete: (book) => dispatch(deleteSearchBook(book))\r\n  }\r\n}\r\n\r\nlet mapStateToProps = function (state, props) {\r\n  return {\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBookItem);","import React, { Component } from 'react';\r\nimport { Form, InputGroup, Button, Input, Row, Col, Card, CardTitle, CardHeader, CardBody } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { search } from '../redux/actions';\r\nimport SearchBookItem from './searchBookItem';\r\n\r\nclass Search extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      search: \"\"\r\n    }\r\n\r\n    this.onFieldChange = this.onFieldChange.bind(this);\r\n  }\r\n\r\n  onFieldChange(event) {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <Form inline>\r\n          <InputGroup>\r\n            <Input type=\"text\" id=\"search\" value={this.state.search} onChange={this.onFieldChange} />\r\n            <Button className=\"custom-blue mb-3\" onClick={() => this.props.searchBooks(this.state.search)}>Search</Button>\r\n          </InputGroup>\r\n        </Form>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Card >\r\n              <CardHeader>Results</CardHeader>\r\n              <CardBody>\r\n                {this.renderSearchList()}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderSearchList() {\r\n    if (this.props.searchList && this.props.searchList.length > 0) {\r\n      const bookList = this.props.searchList.map((book) =>\r\n        <div key={book.id}>\r\n          <CardTitle>{book.title}</CardTitle>\r\n          <SearchBookItem book={book} />\r\n        </div>)\r\n      return (bookList)\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = function (state, props) {\r\n  return {\r\n    searchList: state.search.queryResult\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, props) {\r\n  return {\r\n    searchBooks: (props) => dispatch(search(props))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","\r\nimport React, { Component } from 'react';\r\nimport { CardText, Button, Container } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { updateMyBookLists, deleteFromMyLists } from '../redux/actions'\r\n\r\nclass ListBookItem extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <CardText>{this.props.book.authors}</CardText>\r\n        {/* Move Book Button */}\r\n        <Button outline color=\"primary\" className=\"mb-3\" size=\"sm\"\r\n          onClick={() => { this.props.update(this.props.book, this.props.markType) }}>\r\n          {this.props.markTypeTitle} </Button>\r\n\r\n        {/* Delete Book Button */}\r\n        <Button outline color=\"danger\" className=\"mb-3\" size=\"sm\" onClick={() => { this.props.delete(this.props.book, this.props.markType) }} >Delete</Button>\r\n\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\r\n  return {\r\n    // moves a book to the given \"markType\" (toRead or haveRead)\r\n    update: (book, newMarkType) => dispatch(updateMyBookLists(book, newMarkType)),\r\n    delete: (book, markType) => dispatch(deleteFromMyLists(book, markType))\r\n  }\r\n}\r\n\r\nlet mapStateToProps = function (state, props) {\r\n  return {\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListBookItem);","\r\nimport React, { Component } from 'react';\r\nimport BookItem from './listBookItem';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Card, CardTitle, CardHeader, CardBody, Row } from 'reactstrap';\r\nimport { getMyBookLists } from '../redux/actions'\r\nimport {MARK_HAVE_READ_BUTTON, MARK_TO_READ_BUTTON} from '../constants'\r\n\r\nclass Lists extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onMount();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* To Read List  */}\r\n        <Container>\r\n          <Row>\r\n            <Card >\r\n              <CardHeader>To Read List</CardHeader>\r\n              {/* Book Items  */}\r\n              <CardBody>\r\n                  {this.props.toReadList.map((book)=>\r\n                    <div key={book.id}>\r\n                      <CardTitle>{book.title}</CardTitle>\r\n                          <BookItem className=\"mt-2\" book={book} markTypeTitle={MARK_HAVE_READ_BUTTON} markType=\"haveRead\" />\r\n                    </div>     \r\n                  )}      \r\n              </CardBody>\r\n            </Card>\r\n          \r\n            {/* Have Read List  */}\r\n            <Card >\r\n              <CardHeader>Have Read List</CardHeader>\r\n              {/* Book Items  */}\r\n              <CardBody>\r\n                {this.props.haveReadList.map((book)=>\r\n                  <div key={book.id}>\r\n                    <CardTitle>{book.title}</CardTitle>\r\n                        <BookItem book={book} markTypeTitle={MARK_TO_READ_BUTTON} markType=\"toRead\" />\r\n                  </div>     \r\n                )}      \r\n              </CardBody>\r\n            </Card>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = function mapStateToProps(state, props) {\r\n  return { \r\n    toReadList: state.bookLists.toRead,\r\n    haveReadList: state.bookLists.haveRead\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, props) {\r\n  return {\r\n      onMount: () => { dispatch(getMyBookLists())}\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Lists);","\r\nimport React, { Component } from 'react';\r\nimport { Container, Button, Row, Col } from 'reactstrap';\r\nimport Feedback from \"../components/Feedback\";\r\nimport Search from '../components/search';\r\nimport Lists from '../components/lists';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showLists: false\r\n    }\r\n    this.toggleView = this.toggleView.bind(this);\r\n\r\n  }\r\n\r\n  toggleView() {\r\n    this.setState({ showLists: !this.state.showLists })\r\n  }\r\n\r\n  // Need to  use Router, BrowserRouter and Switch to redirect pages?\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"container\">\r\n        <Feedback />\r\n        <Row>\r\n          <Col className=\"col-12 col-md-2 mt-4\">\r\n            {!this.state.showLists ? <Button className=\"custom-blue\" onClick={this.toggleView}>My Lists</Button>\r\n              : <Button className=\"custom-blue\" onClick={this.toggleView}>Back to Search</Button>}\r\n          </Col>\r\n          <Col className=\"col-12 col-md-8 offset-md-2 mt-4\">\r\n            {!this.state.showLists ? <Search /> : <Lists />}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\nimport searches from './searches';\r\nimport list from \"./lists\";\r\nimport uiFeedback from './userFeedback';\r\n\r\nexport default combineReducers({\r\n    search: searches, // queryResult: [bookInfo]\r\n    bookLists: list, // toRead: [bookInfo], haveRead: [bookItem]\r\n    userFeedback: uiFeedback\r\n});\r\n","import { searchInitialState } from '../../constants';\r\nimport { DELETE_SEARCH_BOOK, RECEIVE_SEARCHED_BOOKS } from '../actionTypes';\r\n\r\nexport default function searches(state = searchInitialState, action) {\r\n    switch (action.type) {\r\n        case RECEIVE_SEARCHED_BOOKS: {\r\n            return { ...state, queryResult: action.payload }\r\n        }\r\n        case DELETE_SEARCH_BOOK: {\r\n            return Object.assign({}, state, {\r\n                queryResult: state.queryResult.filter((book) => book.id !== action.bookInfo.id)\r\n            })\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","// import { MOVE_BOOK, DELETE_BOOK, MARK_READ, MARK_NOT_READ} from \"../actionTypes\";\r\nimport { RECEIVE_MY_BOOKS } from \"../actionTypes\";\r\nimport { listsInitialState } from '../../constants';\r\n\r\nexport default function list(state = listsInitialState, action) {\r\n    switch (action.type) {\r\n        case RECEIVE_MY_BOOKS: {\r\n            return Object.assign({}, state, {\r\n                toRead: action.myBookLists.toRead,\r\n                haveRead: action.myBookLists.haveRead\r\n            })\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    HANDLE_ADD_TWICE_ERROR, HANDLE_DELETE_ERROR, HANDLE_UPDATE_ERROR, HANDLE_GET_ERROR,\r\n    RESET_ERROR, HANDLE_SUCCESS, HANDLE_API_ERROR, HANDLE_SEARCH_DISPLAY_ERROR\r\n} from \"../actionTypes\";\r\nimport {\r\n    feedbackInitialState, UI_FLAG_RESOLVED, UI_FLAG_SUCCESS, UI_FLAG_DELETE_ERROR,\r\n    UI_FLAG_ADD_BOOK_TWICE, UI_FLAG_UPDATE_ERROR, UI_FLAG_GET_FAIL, UI_FLAG_API_ERROR, UI_FLAG_DISPLAY_ERROR\r\n} from \"../../constants\";\r\n\r\nexport default function uiFeedback(state = feedbackInitialState, action) {\r\n    switch (action.type) {\r\n        case HANDLE_SUCCESS: {\r\n            return { flag: UI_FLAG_SUCCESS }\r\n        } case HANDLE_API_ERROR: {\r\n            return { flag: UI_FLAG_API_ERROR };\r\n        } case HANDLE_SEARCH_DISPLAY_ERROR: {\r\n            return { flag: UI_FLAG_DISPLAY_ERROR };\r\n        } case HANDLE_GET_ERROR: {\r\n            return { flag: UI_FLAG_GET_FAIL };\r\n        } case HANDLE_UPDATE_ERROR: {\r\n            return { flag: UI_FLAG_UPDATE_ERROR };\r\n        } case HANDLE_ADD_TWICE_ERROR: {\r\n            return { flag: UI_FLAG_ADD_BOOK_TWICE };\r\n        } case HANDLE_DELETE_ERROR: {\r\n            return { flag: UI_FLAG_DELETE_ERROR };\r\n        } case RESET_ERROR: {\r\n            return { flag: UI_FLAG_RESOLVED };\r\n        } default:\r\n            return state;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles/styles.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\"\r\nimport App from \"./views/App\";\r\nimport indexReducer from \"./redux/reducers/index\"\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst store = createStore(indexReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    rootElement\r\n);\r\n"],"sourceRoot":""}